
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/orientation_mapping/single_phase_orientation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_orientation_mapping_single_phase_orientation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_orientation_mapping_single_phase_orientation.py:


Single Phase Orientation Mapping
================================
You can also calculate the orientation of the grains in a single phase sample using the
:meth:`pyxem.signals.PolarSignal2D.get_orientation` method. This requires that you
simulate the entire S2 space for the phase and then compare to the simulated diffraction.

For more information on the orientation mapping process see :cite:`pyxemorientationmapping2022`

.. GENERATED FROM PYTHON SOURCE LINES 10-17

.. code-block:: Python


    from pyxem.data import si_phase, si_grains
    from diffsims.generators.simulation_generator import SimulationGenerator
    from orix.sampling import get_sample_reduced_fundamental

    simulated_si = si_grains()








.. GENERATED FROM PYTHON SOURCE LINES 18-25

Pre-Processing
--------------
First we center the diffraction patterns and get a polar signal
Increasing the number of npt_azim with give better polar sampling
but will take longer to compute the orientation map
The mean=True argument will return the mean pixel value in each bin rather than the sum
this makes the high k values more visible

.. GENERATED FROM PYTHON SOURCE LINES 25-32

.. code-block:: Python


    simulated_si.calibration.center = None
    polar_si = simulated_si.get_azimuthal_integral2d(
        npt=100, npt_azim=360, inplace=False, mean=True
    )
    polar_si.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_001.png
         :alt: single phase orientation
         :srcset: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_002.png
         :alt:  Signal
         :srcset: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/37 [00:00<?, ?it/s]      3%|▎         | 1/37 [00:03<02:02,  3.39s/it]     62%|██████▏   | 23/37 [00:03<00:01,  9.16it/s]    100%|██████████| 37/37 [00:03<00:00, 10.42it/s]




.. GENERATED FROM PYTHON SOURCE LINES 33-38

Building a Simulation
---------------------
Now we can get make a simulation. In this case we want to set a minimum_intensity which removes the low intensity reflections.
we also sample the S2 space using the :func`orix.sampling.get_sample_reduced_fundamental`.  Make sure that you set
``with_direct_beam=False`` or the orientation mapping will be unduely affected by the center beam.

.. GENERATED FROM PYTHON SOURCE LINES 38-49

.. code-block:: Python

    phase = si_phase()
    generator = SimulationGenerator(200, minimum_intensity=0.05)
    rotations = get_sample_reduced_fundamental(resolution=1, point_group=phase.point_group)
    sim = generator.calculate_diffraction2d(
        phase,
        rotation=rotations,
        max_excitation_error=0.1,
        reciprocal_radius=2,
        with_direct_beam=False,
    )  # Make sure that with_direct_beam ==False








.. GENERATED FROM PYTHON SOURCE LINES 50-57

Getting the Orientation
-----------------------
By default the `get_orientation` function uses a gamma correction equilivent to polar_si**0.5.  For noisy datasets
it might be a good idea to reduce the noise (Maybe by averaging neighboring patterns?) or simple background subtraction,
otherwise the gamma correction will increase the effects of noise on the data. This tries to focus on  "Is the Bragg vector
there?" rather than "Is the Bragg vector the right intensity?" patially because the intensity of the Bragg vector might have
many different effects.

.. GENERATED FROM PYTHON SOURCE LINES 57-62

.. code-block:: Python


    polar_si = polar_si**0.5  # gamma correction.
    orientation_map = polar_si.get_orientation(sim)
    orientation_map.plot_over_signal(simulated_si, vmax="96th")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_003.png
         :alt: single phase orientation
         :srcset: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_004.png
         :alt:  Signal
         :srcset: /examples/orientation_mapping/images/sphx_glr_single_phase_orientation_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/73 [00:00<?, ?it/s]      1%|▏         | 1/73 [00:02<03:31,  2.93s/it]    100%|██████████| 73/73 [00:02<00:00, 24.40it/s]
      0%|          | 0/73 [00:00<?, ?it/s]    100%|██████████| 73/73 [00:00<00:00, 4245.84it/s]
      0%|          | 0/73 [00:00<?, ?it/s]    100%|██████████| 73/73 [00:00<00:00, 4019.11it/s]
      0%|          | 0/73 [00:00<?, ?it/s]    100%|██████████| 73/73 [00:00<00:00, 3622.32it/s]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

sphinx_gallery_thumbnail_number = 4


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.408 seconds)


.. _sphx_glr_download_examples_orientation_mapping_single_phase_orientation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: single_phase_orientation.ipynb <single_phase_orientation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: single_phase_orientation.py <single_phase_orientation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: single_phase_orientation.zip <single_phase_orientation.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
