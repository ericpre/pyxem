

.. _sphx_glr_examples_processing:

Data Processing
================
Below is a gallery of examples on how to process 4-D STEM data in pyxem


.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="The Circular Hough Transform is a method to detect circular features in an image. It can be used to detect rings (or disks) in the diffraction pattern.  For strain mapping there is some evidence that the Circular Hough transform is more accurate than typical template matching and can provide subpixel accuracy.">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_circular_hough_transform_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_circular_hough_transform.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Circular Hough Transform Peak Finding</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="If your diffraction data is noisy, you might want to subtract the background from the dataset. Pyxem offers some built-in functionality for this, with the subtract_diffraction_background class method. Custom filtering is also possible, an example is shown in the &#x27;Filtering Data&#x27;-example.">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_background_subtraction_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_background_subtraction.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Background subtraction</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="If you have a low number of counts in your data, you may want to filter the data to remove noise. This can be done using the filter function which applies some function to the entire dataset and returns a filtered dataset of the same shape.">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_filtering_data_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_filtering_data.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Filtering Data (Averaging Neighboring Patterns etc.)</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Centering the Zero Beam">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_centering_the_zero_beam_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_centering_the_zero_beam.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Centering the Zero Beam</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Finding Diffraction Vectors">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_vector_finding_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_vector_finding.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Finding Diffraction Vectors</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example shows how the template matching is done in pyxem to find peaks in a diffraction pattern.">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_template_matching_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_template_matching.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Template Matching</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="pyxem now includes built in azimuthal integration functionality. This is useful for extracting radial profiles from diffraction patterns in 1 or 2 dimensions.  The new method will split the pixels into radial bins and then sum the intensity in each bin resulting in a Diffraction1D or Polar2D signal.  In each case the total intensity of the diffraction pattern is preserved.">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_azimuthal_integration_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_azimuthal_integration.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Azimuthal Integration (in Pyxem!)</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates how to calibrate the scales in both reciprocal and real-space.  Ideally this should be done using a calibration standard with a known lattice spacing.">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_calibrating_recip_space_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_calibrating_recip_space.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Calibrating Scales</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="- Orientation mapping - Angular Correlation (AC) - Fluctuation Electron Microscopy (FEM) - And many other 4-D STEM techniques">

.. only:: html

  .. image:: /examples/processing/images/thumb/sphx_glr_determining_ellipticity_thumb.png
    :alt:

  :ref:`sphx_glr_examples_processing_determining_ellipticity.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Determining Elliptic Distortion</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /examples/processing/circular_hough_transform
   /examples/processing/background_subtraction
   /examples/processing/filtering_data
   /examples/processing/centering_the_zero_beam
   /examples/processing/vector_finding
   /examples/processing/template_matching
   /examples/processing/azimuthal_integration
   /examples/processing/calibrating_recip_space
   /examples/processing/determining_ellipticity

